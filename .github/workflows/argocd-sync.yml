name: CI on Main

on:
  push:
  #  branches:
  #    - main
  #pull_request:
  #  branches:
  #    - main

jobs:
  argocd-sync:
    name: ArgoCD Sync
    runs-on: ubuntu-latest
    env:
      ARGOCD_SERVER: argocd.k8s-dev.mentumqr.com
      ARGOCD_USERNAME: admin
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: Set up ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: ArgoCD Login and Sync
      run: |
        #!/bin/bash

        set -e # Exit with nonzero exit code if anything fails

        # List of applications
        APPS=(
          "ameego"
          "analytics" 
          "api" 
          "caput" 
          "cortex" 
          "doordash" 
          "grubhub" 
          "hermes" 
          "hippo-executor" 
          "hippo-scheduler" 
          "hippo-server" 
          "olo" 
          "skip" 
          "socket" 
          "uber"
          "ingress"
        )

        echo "Getting ArgoCD Credentials"
        ARGOCD_PASSWORD=$(aws secretsmanager get-secret-value \
            --secret-id dev/mentum/infra/argocd-admin-creds \
            --query SecretString | jq -r 'fromjson? | .password')

        echo "Logging in to ArgoCD Server: ${ARGOCD_SERVER} for application: ${app_name}"
        argocd login ${ARGOCD_SERVER} \
          --username ${ARGOCD_USERNAME} \
          --password ${ARGOCD_PASSWORD} \
          --insecure \
          --grpc-web

        for app_name in "${APPS[@]}"; do
          case $app_name in
            "customer"| "merchant")
              ARGOCD_APP_NAME="mentum-dev-frontend-${app_name}"
              ;;
            "ingress")
              ARGOCD_APP_NAME="mentum-dev-ingress-static-file"
              ;;
            *)
              ARGOCD_APP_NAME="mentum-dev-backend-${app_name}"
              ;;
          esac

          echo "Syncing application: $app_name"
          argocd app sync ${ARGOCD_APP_NAME} --grpc-web --async --force ||true'
          argocd app wait --grpc-web ${ARGOCD_APP_NAME} --sync --health --operation --timeout=900 2>errmsg.txt; rc=$?'

          if [[ ${rc} -ne 0 ]]; then
            errmsg=$(cat errmsg.txt)
            echo "${errmsg}" | grep -q 'timed out'
            [[ $? -ne 0 ]] && echo ${errmsg} && exit ${rc}
          fi
        done
